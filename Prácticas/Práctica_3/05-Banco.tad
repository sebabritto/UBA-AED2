TAD Banco
	Géneros:	banco
	Observadores Básicos:
		Esperando:		persona × banco			-> bool
		Posicion:			persona p × banco		-> nat      {Esperando(p, f)}
		SeColo?:			persona p × banco f	-> bool			{Esperando(p, f)}
		Entro?:				persona × banco			-> bool
		FueAtendido?:	persona × banco			-> bool
		Longitud:			banco								-> nat
		
	Generadores:
		AbrirVentanilla: 																		-> banco
		Llegar:							persona p × banco f							-> banco   {¬Esperando(p,f)}
		Atender:						banco f													-> banco   {¬Vacia(f)}
		Retirarse:					persona p × banco f							-> banco		{Esperando(p, f)}
		ColarseAdelanteDe:	persona p × persona q × banco f	-> banco 	{Esperando(q, f) ∧ ¬Esperando(p, f) ∧ q ≠ p}
		
	Otras Operaciones:
		Vacia: banco -> bool
	Axiomas:
	...	
Fin TAD

Representación:
	banco se representa con estr donde
		estr es tupla ⟨entraron: conj(persona), fila: cola(persona), colados: conj(persona), atendidos: conjunto(persona)⟩
---
Solución Informal:
	- Entraron es un conjunto con todas las personas que alguna vez estuvieron en la fila.
	- Colados son las personas que estan actualmente en la fila y se colaron al llegar.
	- Atendidos son las personas que fueron atendidas en el banco.
---
Invariante de Representación:
	Rep:	estr	->	boolean
	(∀e: estr) Rep(e)	≡ true ⇐⇒ (1)∧(2)∧(3)
		donde:
		(1)	≡	e.atendidos ∪ colaAConjunto(e.fila) = e.entraron 
		(2)	≡ e.colados ⊆ colaAConjunto(e.fila)
		(3) ≡ (colaAConjunto(e.fila) ∩ e.atendidos) = Ø ∧ e.atendidos ⊆ e.entraron 
					//Otra forma: e.entraron - e.atendidos = colaAConjunto(e.fila)
		
		colaAConjunto: cola(persona) -> conj(persona)
		colaAConjunto(cp) ≡	if vacía?(cp) then
													Ø
												else
													Ag(proximo(cp), colaAConjunto(desencolar(cp)))
												fi
---
Función de abstracción:
	Abs:	estr	->	banco	{Rep(e)}
	(∀e: estr) Abs(e) =obs b: banco | (1)∧(2)∧(3)∧(4)∧(5)
		donde:
		(1)	≡	(∀ p: persona)(p ∈ e.entraron ⇒L Entro?(p, b))
		(2)	≡	(∀ p: persona)(p ∈ e.colados ⇒L SeColo?(p, b))
		(3) ≡ (∀ p: persona)(p ∈ e.atendidos ⇒L FueAtendido?(p, b))
		(4) ≡ tamaño(e.fila) = Longitud(b)
		(5) ≡ (∀ p: persona)(p ∈ colaAConjunto(e.fila) ⇒L Esperando(p, b) ∧L posicionEnCola(p, e.fila) = Posicion(p, b))
					
		posicionEnCola: persona × cola(persona) -> nat
		posicionEnCola(p, cp) ≡ if proximo(cp) = p then
															1
														else
															1 + posicionEnCola(p, cp)
														fi
---
