a)2^n = O(1) ≡ false. Falso, no puede estar acotado por una constante ∀ n ∈ N. Lo pruebo:
    2^n ∈ O(1) ⟺  ∃ no ∈ ℕ, c ∈ ℝ>0 / n >= no ⟹ 2^n <= c*1
        2^n <= c
    n*log₂2 <= log₂c
          n <= log₂c 
    Si elejimos un valor para c fijo, es imposible encontrar un n₀ / n >= n₀,
    ya que siempre vamos a encontrar un n > log₂c
    
b)n = O(n!) ≡ true
    n ∈ O(n!) ⟺  ∃ no ∈ ℕ c ∈ ℝ>0 / n >= no ⟹ n <= c*n!
    n <= c*n!
    n <= c*n*(n-1)!
    1 <= c*(n-1)! Elijo c = 1
    1 <= (n-1)!   ∀ n ∈ ℕ

c) n! = O(n^n) ≡ true
    n! ∈ O(n^n) ⟺  ∃ no ∈ ℕ, c ∈ ℝ>0 / n >= no ⟹ n! <= c*n^n
    Lo pruebo por induccion: Con c = 1
    p(n): n! <= n^n
    Caso base: n = 1 ⟹ 1 <= 1 cumple
               n = 2 ⟹ 2 <= 4 cumple
    
    H.I.: Sea h ∈ N ⟹ h! <= h^h
        
    QVQ: (h+1)! <= (h+1)^(h+1)
    Luego, (h+1)! <= (h+1)^(h+1) ⟺ h!*(h+1) <= (h+1)^h * (h+1)
        ⟺     h! <= (h+1)^h     ⟺HI    h^h <= (h+1)^h
        ⟺      h <= h+1         ⟺        0 <= 1 
        Probe que p(1) es verdadero y que p(h) ⟹ p(h+1) ∀ h ∈ N. Por induccion,
        puedo decir que p(n) es verdadero ∀ n ∈ ℕ

d)  2^n = O(n!) ≡ true
    2^n ∈ O(n!) ⟺  ∃ no ∈ ℕ, c ∈ ℝ>0 / n >= no ⟹ 2^n <= c*n!
    Lo pruebo por induccion: Tomo c = 1
    p(n): 2^n <= n!
    Caso base:
        p(1): 2 <= 1 No cumple
        p(2): 4 <= 2 No cumple
        p(3): 8 <= 6 No cumple
        p(4): 16 <= 24 Cumple
        p(5): 32 <= 120 Cumple
    H.I.: Sea h ∈ N, h >= 4. Supongo que p(h) es verdadero. 2^h <= h!

    QVQ: 2^{h+1} <= (h+1)!
                              HI      QVQ
    Se que: 2^{h+1} = 2^h * 2 <= h!*2 <= (h+1)!
       ⟺    2*h! <= (h+1)*h!    ⟺   2 <= h+1 Lo cual vale ∀ h >= 4
    Asi, p(4) es verdadero y ∀ h ∈ N>=4, p(h) es verdadero ⟹ p(h+1) es verdadero
    Por el principio de induccion (corrida), p(n) vale ∀ n >= 4

e)  ∀ i, j ∈ ℕ, i*n = O(j*n) ≡ true
    i*n ∈ O(j*n) ⟺  ∃ no ∈ N, c ∈ ℝ>0 / n >= no ⟹ i*n <= c*j*n
        i*n <= c*j*n    ⟺   i <= j*c   ⟺    i/j <= c
        Si tomo c >= i/j, esto vale ∀ i, j, n ∈ N
    Ejemplo:
        i = 3, j = 2, c = 3/2 ⟹ 3 <= 2*3/2 ⟺ 3 <= 3 Se cumple
        i = 2, j = 3, c = 2/3 ⟹ 2 <= 3*(2/3) ⟺ 2 <= 2 Se cumple y asi...

f)  ∀ k ∈ ℕ, 2^k = O(1) ≡ true
    2^k ∈ O(1) ⟺ ∃ no ∈ N, c ∈ ℝ>0 / n >= no ⟹ 2^k <= c
    Pero 2^k es una constante, asi que 2^k ∈ O(1), luego c = 2^k
    
g)  log n = O(n) ≡ true, ya se que log n ∈ O(n), pero lo pruebo de todas formas.
    log n ∈ O(n) ⟺ ∃ no ∈ N, c ∈ ℝ>0 / n >= no ⟹ log n <= c*n
    Medio un quilombo, mejor saco limite.
    lim log(n)/n =  lim 1/n = 0 ⟹ log n ∈ O(n)
    n->∞        L'H n->∞

h)  n! = O(2^n) ≡ false
    n! ∈ O(2^n) ⟺ ∃ no ∈ N, c ∈ ℝ>0 / n >= no ⟹ n! <= c*2^n
    En el punto d, ya probe que 2^n <= n! ∀ n >= 4
    Entonces, n! <= 2^n ⟺ n ∈ (1,2,3)

i) 2^n * n^2 = O(3^n)
    2^n * n^2 ∈ O(3^n) ⟺  ∃ no ∈ N, c ∈ ℝ>0 / n >= no ⟹ 2^n * n^2 <= c*3^n
    Me fijo por limites,
    lim 2^n * n^2 / 3^n =   lim n/(2^n *n^2 / 3^n) = lim 2*1 / 3 = 2/3 < 1
    n->∞            Cauchy  n->∞                     n->∞
    lim 2^n * n^2 / 3^n = 0 ⟹ 2^n * n^2 ∈ O(3^n)
    n->∞

j)∀ f: ℕ -> ℕ, f = O(f)
    f ∈ O(f) ⟺ ∃ no ∈ N, c ∈ ℝ>0 / n >= no ⟹ f <= c*f
    Si tomo c = 1, f <= f Lo cual se cumple siempre
