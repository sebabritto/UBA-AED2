TAD SecuenciaExtendida2(α)
	extiende
      SecuenciaExtendida(α)
  Otras Operaciones:
		NTN: conj(secu(α)) × secu(α) -> conj(secu(α))
		listaSubSecuencias: conj(secu(α)) × secu(α) -> conj(secu(α))
		esSubSecuencia: secu(α) × secu(α) -> bool
		sinPrefijos: conj(secu(α)) × conj(secu(α)) -> conj(secu(α))
		esPrefijoDeOtra: secu(α) × conj(secu(α)) -> bool
  Axiomas:
  	NTN(c, s) ≡ sinPrefijos(listaSubSecuencias(c, s), c)
    //--------------------------------------------------------------------------
		listaSubSecuencias(c, s) ≡ 	if vacia?(s) then
	                                  Ag(c, ∅)
	                              else
	                                  if(esSubSecuencia(dameUno(c), s)) then
	                                      Ag(dameUno(c), listaSubSecuencias(sinUno(c), s))
	                                  else
	                                      listaSubSecuencias(sinUno(c), s)
	                                  fi
	                              fi
    //--------------------------------------------------------------------------
		esSubSecuencia(s, t) ≡	if vacia?(s) ∨ vacia?(t) then
	                              vacia?(s)
	                          else
	                              if prim(s) = prim(t) then
	                                  esSubSecuencia(fin(s), fin(t))
	                              else
	                                  esSubSecuencia(s, fin(t))
	                              fi
	                          fi
    //--------------------------------------------------------------------------
		sinPrefijos(xs, ys) ≡	if vacia?(xs) then
                              Ag(xs, ∅)
                          else
                              if esPrefijoDeOtra(dameUno(xs), ys) then
                                  sinPrefijos(sinUno(xs), ys)
                              else
                                  Ag(dameUno(c), sinPrefijos(sinUno(xs), ys))
                              fi
                          fi
    //--------------------------------------------------------------------------
		esPrefijoDeOtra(s, c) ≡ if vacia?(c) then
                                false
                            else
                                (s != dameUno(c) ∧ esPrefijo(s, dameUno(c))) ∨ esPrefijoDeOtra(s, sinUno(c))
														fi
Fin TAD
